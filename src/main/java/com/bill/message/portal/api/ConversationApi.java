/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.52).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.bill.message.portal.api;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.responses.ApiResponses;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import com.bill.message.portal.model.FetchHistoryResponse;

import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2024-01-30T16:56:02.418270621Z[GMT]")
@Validated
public interface ConversationApi {

    @Operation(summary = "Fetch history conversation", description = "fetch the conversation history of a user using user ID", tags={  })
    @ApiResponses(value = { 
        @ApiResponse(responseCode = "200", description = "OK", content = @Content(mediaType = "application/json", schema = @Schema(implementation = FetchHistoryResponse.class))) })
    @RequestMapping(value = "/conversation/history/{user_id}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<FetchHistoryResponse> getConversationUserID(@Parameter(in = ParameterIn.HEADER, description = "JWT" ,required=true,schema=@Schema()) @RequestHeader(value="Authorization", required=true) Object authorization
, @Parameter(in = ParameterIn.PATH, description = "", required=true, schema=@Schema()) @PathVariable("user_id") Object userId
, @Parameter(in = ParameterIn.QUERY, description = "頁碼，預設1" ,schema=@Schema()) @Valid @RequestParam(value = "page", required = false) Object page
, @Parameter(in = ParameterIn.QUERY, description = "篩選起始時間" ,schema=@Schema()) @Valid @RequestParam(value = "start_time", required = false) Object startTime
, @Parameter(in = ParameterIn.QUERY, description = "篩選結束時間" ,schema=@Schema()) @Valid @RequestParam(value = "end_time", required = false) Object endTime
);

}

